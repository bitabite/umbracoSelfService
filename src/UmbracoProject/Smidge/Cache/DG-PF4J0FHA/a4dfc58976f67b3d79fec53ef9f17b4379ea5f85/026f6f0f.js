angular.module("umbraco.deploy.services").service("deployConfiguration",["$http",function(){var instance=this;return Umbraco.Sys.ServerVariables.deploy!==undefined&&Umbraco.Sys.ServerVariables.deploy!==null?angular.extend(instance,Umbraco.Sys.ServerVariables.deploy):console.log("Could not get deploy configuration"),instance}]);angular.module("umbraco.deploy.services").service("deployService",function($q,deployConfiguration,$rootScope,deployResource){var instance=this;return instance.sessionId="",instance.pSessionId="",instance.error=undefined,instance.deploy=function(enableWorkItemLogging,schemaInfo){return deployResource.deploy(deployConfiguration.Target.DeployUrl,enableWorkItemLogging,schemaInfo.isLocal,schemaInfo.isDeveloper,schemaInfo.doAutomaticSchemaTransfer).then(function(data){return instance.setSessionId(data.SessionId),data},function(data){return $q.reject(data)})},instance.instantDeploy=function(deployItems,enableWorkItemLogging){Array.isArray(deployItems)===!1&&(deployItems=[deployItems]);var promises=[],items=[];return deployItems.forEach(function(deployItem){promises.push(deployResource.getUdiRange(deployItem.id,deployItem.culture,deployItem.includeDescendants,deployItem.releaseDate,deployItem.entityType).then(function(item){item!=="null"&&item!==null&&items.push(item)}))}),$q.all(promises).then(function(){return deployResource.instantDeploy(items,deployConfiguration.Target.DeployUrl,enableWorkItemLogging).then(function(data){return instance.setSessionId(data.SessionId),data},function(data){return $q.reject(data)})},function(error){return $q.reject(error)})},instance.restore=function(targetUrl,treeAlias,enableWorkItemLogging){return treeAlias?deployResource.treeRestore(targetUrl,treeAlias,enableWorkItemLogging).then(function(data){return instance.setSessionId(data.SessionId),data},function(data){return $q.reject(data)}):deployResource.restore(targetUrl,enableWorkItemLogging).then(function(data){return instance.setSessionId(data.SessionId),data},function(data){return $q.reject(data)})},instance.partialRestore=function(targetUrl,restoreNodes,enableWorkItemLogging){return deployResource.partialRestore(targetUrl,restoreNodes,enableWorkItemLogging).then(function(data){return instance.setSessionId(data.SessionId),data},function(data){return $q.reject(data)})},instance.import=function(zipFileName,warningsAsErrors,includeContentEntityTypes,includeSchemaEntityTypes,includeContentFileEntityTypes,includeSchemaFileEntityTypes,enableWorkItemLogging){return deployResource.import(zipFileName,warningsAsErrors,includeContentEntityTypes,includeSchemaEntityTypes,includeContentFileEntityTypes,includeSchemaFileEntityTypes,enableWorkItemLogging).then(function(data){return instance.setSessionId(data.SessionId),data},function(data){return $q.reject(data)})},instance.deleteImport=function(zipFileName){return deployResource.deleteImport(zipFileName).then(function(data){return data},function(data){return $q.reject(data)})},instance.export=function(includeContentDependencies,includeContentFileDependencies,includeSchemaDependencies,includeSchemaFileDependencies,enableWorkItemLogging){return deployResource.export(includeContentDependencies,includeContentFileDependencies,includeSchemaDependencies,includeSchemaFileDependencies,enableWorkItemLogging).then(function(data){return instance.setSessionId(data.SessionId),data},function(data){return $q.reject(data)})},instance.treeExport=function(id,entityType,includeDescendants,includeContentDependencies,includeContentFileDependencies,includeSchemaDependencies,includeSchemaFileDependencies,treeAlias,enableWorkItemLogging){return deployResource.treeExport(id,entityType,includeDescendants,includeContentDependencies,includeContentFileDependencies,includeSchemaDependencies,includeSchemaFileDependencies,treeAlias,enableWorkItemLogging).then(function(data){return instance.setSessionId(data.SessionId),data},function(data){return $q.reject(data)})},instance.downloadExport=function(id){return deployResource.downloadExport(id)},instance.deleteExport=function(id){return deployResource.deleteExport(id).then(function(data){return data},function(data){return $q.reject(data)})},instance.feedbackMessageLevel=function(){return deployResource.getCurrentUserFeedbackLevel()},instance.getStatus=function(){return deployResource.getStatus(instance.sessionId).then(function(data){return $rootScope.$broadcast("deploy:sessionUpdated",{sessionId:data.SessionId,status:data.Status,comment:data.Comment,percent:data.Percent,log:data.Log,exception:data.Exception,mismatchList:data.mismatchList}),data},function(data){return instance.removeSessionId(),$q.reject(data)})},instance.setSessionId=function(sessionId){instance.sessionId=sessionId;localStorage.setItem("deploySessionId",sessionId)},instance.removeSessionId=function(){instance.pSessionId=instance.sessionId;instance.sessionId=null;localStorage.removeItem("deploySessionId")},instance.getSessionId=function(){return localStorage.getItem("deploySessionId")},instance.isOurSession=function(sessionId){return instance.sessionId===sessionId?!0:instance.pSessionId!==sessionId?!1:(instance.pSessionId=null,!0)},instance.prettyEntityType=function(udi){var udiScheme="umb://",entityType=udi.startsWith(udiScheme)?udi.substr(udiScheme.length,udi.indexOf("/",udiScheme.length)-udiScheme.length):udi;return entityType.substr(0,1).toUpperCase()+entityType.substr(1).replaceAll("-"," ")},instance.getViewName=function(name){return name.includes(".cshtml")?name.replace("umb://template-file/",""):name},instance.isDeveloper=function(userFeedbackLevel){return userFeedbackLevel==="Developer"?!0:!1},instance.getSessionId(),instance}),function(){"use strict";function deployHelperService(){function getDeployItem(node,culture,includeDescendants,releaseDate,$routeParams,treeService,deployResource){var item={id:node.id,name:node.name,culture:culture,includeDescendants:includeDescendants,releaseDate:releaseDate},treeAlias=treeService.getTreeAlias(node)||$routeParams.tree,routePath=node.routePath||$routeParams.section+"/"+$routeParams.tree+"/"+$routeParams.method+"/"+$routeParams.id;return deployResource.getEntityTypeForTreeMenu(treeAlias,routePath).then(function(data){return item.entityType=data.EntityType,(node.nodeType==="initstylesheets"||node.nodeType==="initscripts"||node.nodeType==="initdictionary"||node.nodeType==="initmacros"||node.nodeType==="initmemberGroup"||node.nodeType==="initxslt")&&(item.id="-1"),item.id==="-1"&&(item.includeDescendants=!0),item.entityType==="stylesheet"&&item.id!=="-1"&&item.id.indexOf(".css")===-1&&(item.id=item.id+".css"),item})}function getStatusValue(number){switch(number){case 2:return"inProgress";case 3:return"completed";case 4:return"failed";case 5:return"cancelled";case 6:return"timedOut";case 7:return"mismatch";default:return""}}function getEntityTypeFromUdi(udi){var m=udi.match(/umb:\/\/(.+)\//);return m!==null?m[1]:null}function addInstantDeployButtonToButtonSet(buttons,node,localizationService,navigationService){addButtonToButtonSet(buttons,node,localizationService,navigationService,"D","deployTransferNow","ctrl+d","deploy.html")}function addButtonToButtonSet(buttons,node,localizationService,navigationService,letter,labelKey,hotKey,dialogView){buttons.push({letter:letter,labelKey:"actions_"+labelKey,hotKey:hotKey,hotKeyWhenHidden:!0,handler:function(){!node.nodeType&&node.udi&&(node.nodeType=getEntityTypeFromUdi(node.udi));localizationService.localize("dialogs_"+labelKey+"Title").then(function(value){navigationService.showDialog({action:{name:value,metaData:{actionView:"../App_Plugins/Deploy/views/dialogs/"+dialogView,dialogMode:!0}},node:node})})}})}function getEntityName(entityType,entityTypeToNameMap){return entityTypeToNameMap[entityType]||"Other items"}return{getDeployItem:getDeployItem,getStatusValue:getStatusValue,getEntityTypeFromUdi:getEntityTypeFromUdi,addInstantDeployButtonToButtonSet:addInstantDeployButtonToButtonSet,getEntityName:getEntityName}}angular.module("umbraco.deploy.services").factory("deployHelper",deployHelperService)}();angular.module("umbraco.deploy.services").service("deployNavigation",["$timeout",function($timeout){var instance=this;return instance.view="queue",instance.navigate=function(viewname){$timeout(function(){instance.view=viewname})},instance}]),function(){"use strict";function pluginEntityService($routeParams,deployResource,deployHelper,editorState,localizationService,navigationService){function addInstantDeployButton(buttons){var treeAlias=$routeParams.tree,routePath=$routeParams.section+"/"+$routeParams.tree+"/"+$routeParams.method+"/"+$routeParams.id;deployResource.checkForRegisteredEntityWithPermissionToTransfer(treeAlias,routePath).then(function(data){data.CanTransfer&&deployHelper.addInstantDeployButtonToButtonSet(buttons,editorState.current,localizationService,navigationService)})}return{addInstantDeployButton:addInstantDeployButton}}angular.module("umbraco.deploy.services").factory("pluginEntityService",pluginEntityService)}();angular.module("umbraco.deploy.services").service("deployQueueService",["$q","notificationsService","queueResource",function($q,notificationsService,queueResource){var instance=this;return instance.queue=[],instance.clearQueue=function(){return queueResource.clearQueue().then(function(){return instance.queue.splice(0),instance.queue},function(data){return notificationsService.error("Error","Could not clear the queue."),$q.reject(data)})},instance.addToQueue=function(item){return queueResource.addToQueue(item).then(function(data){return data!=="null"&&data!==null&&_.forEach(data,function(rItem){var found=_.find(instance.queue,function(o){return o.Udi===rItem.Udi});found!==undefined&&found!==null?found.IncludeDescendants=rItem.IncludeDescendants:instance.queue.push(rItem)}),instance.queue},function(data){return notificationsService.error("Error",data.ExceptionMessage),$q.reject(data)})},instance.removeFromQueue=function(item){return queueResource.removeFromQueue(item).then(function(){return instance.queue.splice(instance.queue.indexOf(item),1),instance.queue},function(data){return notificationsService.error("Error",data.ExceptionMessage),$q.reject(data)})},instance.refreshQueue=function(){return queueResource.getQueue().then(function(data){return instance.queue.splice(0),_.forEach(data,function(item){instance.queue.push(item)}),instance.queue},function(data){return notificationsService.error("Error","Could not retrieve the queue."),$q.reject(data)})},instance.isLicensed=function(){return queueResource.getLicenseStatus().then(function(data){return data},function(){return{success:!1,message:"Unexpected error"}})},instance.refreshQueue(),instance}]);angular.module("umbraco.deploy.services").service("deploySignalrService",["$rootScope",function($rootScope){var instance=this,initialized=!1,lock=!1;return instance.initialize=function(){var deployConnectionBuilder,restoreConnectionBuilder,isBackOfficeRequest;if(initialized===!1&&lock===!1){if(lock=!0,$.deployConnection&&$.deployConnection.connectionState===signalR.HubConnectionState.Connected&&$.restoreConnection&&$.restoreConnection.connectionState===signalR.HubConnectionState.Connected)return;deployConnectionBuilder=(new signalR.HubConnectionBuilder).withUrl(Umbraco.Sys.ServerVariables.umbracoUrls.deployHubUrl).withAutomaticReconnect();restoreConnectionBuilder=(new signalR.HubConnectionBuilder).withUrl(Umbraco.Sys.ServerVariables.umbracoUrls.restoreHubUrl).withAutomaticReconnect();Umbraco.Sys.ServerVariables.isDebuggingEnabled?(deployConnectionBuilder.configureLogging(signalR.LogLevel.Debug),restoreConnectionBuilder.configureLogging(signalR.LogLevel.Debug)):(deployConnectionBuilder.configureLogging(signalR.LogLevel.None),restoreConnectionBuilder.configureLogging(signalR.LogLevel.None));$.deployConnection=deployConnectionBuilder.build();$.restoreConnection=restoreConnectionBuilder.build();$.deployConnection.on("heartbeat",function(sessionId,serverTimestamp,workItem){$rootScope.$broadcast("deploy:heartbeat",{sessionId:sessionId,serverTimestamp:serverTimestamp,workItem:workItem})});$.deployConnection.on("sessionUpdated",function(sessionId,status,comment,percent,log,exceptionJson,serverTimestamp,mismatchList,workItem){$rootScope.$broadcast("deploy:sessionUpdated",{sessionId:sessionId,status:status,comment:comment,percent:percent,log:log,exception:angular.fromJson(exceptionJson),serverTimestamp:serverTimestamp,mismatchList:mismatchList,workItem:workItem})});$.restoreConnection.on("heartbeat",function(sessionId,serverTimestamp,workItem){$rootScope.$broadcast("restore:heartbeat",{sessionId:sessionId,serverTimestamp:serverTimestamp,workItem:workItem})});$.restoreConnection.on("sessionUpdated",function(sessionId,status,comment,percent,log,exceptionJson,serverTimestamp,workItem){$rootScope.$broadcast("restore:sessionUpdated",{sessionId:sessionId,status:status,comment:comment,percent:percent,log:log,exception:angular.fromJson(exceptionJson),serverTimestamp:serverTimestamp,workItem:workItem})});$.restoreConnection.on("diskReadSessionUpdated",function(sessionId,status,comment,percent,log,exceptionJson,serverTimestamp,workItem){$rootScope.$broadcast("restore:diskReadSessionUpdated",{sessionId:sessionId,status:status,comment:comment,percent:percent,log:log,exception:angular.fromJson(exceptionJson),serverTimestamp:serverTimestamp,workItem:workItem})});try{isBackOfficeRequest=function(){return Umbraco.Sys.ServerVariables.application!==undefined};isBackOfficeRequest()&&$.deployConnection.start().then(function(){}).catch(function(){console.error("Could not connect to DeployHub.")});$.restoreConnection.start().then(function(){}).catch(function(){console.error("Could not connect to RestoreHub.")})}catch(e){console.error("Could not establish signalR connection. Error: "+e)}initialized=!0;lock=!1}},instance.initialize(),instance}]),function(){"use strict";function workspaceHelperService($window){function getActiveWorkspace(workspaces){for(var workspace,i=0;i<workspaces.length;i++)if(workspace=workspaces[i],workspace.Active===!0)return workspace}function addWorkspaceInPortal(projectUrl){$window.open(projectUrl+"?addEnvironment=true")}function addAddWorkspace(workspaces){var devWorkspaceFound=!1;angular.forEach(workspaces,function(workspace){workspace.Type==="development"&&(devWorkspaceFound=!0)});devWorkspaceFound||workspaces.unshift({Name:"Add workspace",Type:"inactive",Current:!1,Active:!1})}return{getActiveWorkspace:getActiveWorkspace,addWorkspaceInPortal:addWorkspaceInPortal,addAddWorkspace:addAddWorkspace}}angular.module("umbraco.deploy.services").factory("workspaceHelper",workspaceHelperService)}()